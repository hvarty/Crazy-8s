 //GAME LOOP- everything is inside this and it is activated from the play button on the intro screen,
        //at the end if this loop before it repeats, it checks if the active player has 0 cards left, 
        //if they do, they win

//TURN- when the user clicks a card, turn checks if it can be played by comparing it to the top card's value
        //if the card cannot be played, text pop-up saying 'you cannot play that card', appears, this
        //will disappear if another card is played that works, or stay if another wrong card is played
        //each turn ends when either correctcard played is true or the draw pile is clicked
        //if the draw pile is clicked, the pop method is used from the cards in the draw pile array and it is
        //added to the hand

        //turn only ends when play cards button is clicked, allowing for mutliple cards to be checked
        //in one turn

        //if computer's turn, the program selects loops through cards from the computer hand array 
        //and loops the check method to check if the card can be played until it reaches the last card 
        //and picks up if needed

        //need a check function that compares card to the topcard
        
        //need play cards button

        //if Check is true after the play card button is clicked, these selected card(s) are moved to 
        //played pile's array



 
 //turn method that checks if the card played is allowed

    //create an array for player hand, computer hand, draw pile, and played pile
    //every card has the number value, and suit value, only 52 cards total for the entire duration of the game

    //for the hand layout, use a flex that allows the cards to flow from left to right

    //if you cannot play, press the draw pile to pickup using the pop method from the draw pile array


    //turn loop checks if the amount value of the hand/computer hand array is 0, meaning they won the game

    //each card array has a position, card number and suit
